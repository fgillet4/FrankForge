<!-- src/components/ResourceDisplay.svelte -->
<script lang="ts">
    import { gameState } from '$lib/gameLoop';
    
    // Resource icons/colors
    const resourceColors = {
      methane: '#27ae60',
      oxygen: '#3498db',
      water: '#00bcd4',
      carbon_dioxide: '#95a5a6',
      hydrogen: '#f1c40f',
      energy: '#e67e22',
      sulfur: '#f39c12'
    };
    
    // Format numbers with suffixes (K, M, etc.)
    function formatNumber(num: number): string {
      if (num >= 1_000_000) {
        return (num / 1_000_000).toFixed(1) + 'M';
      } else if (num >= 1_000) {
        return (num / 1_000).toFixed(1) + 'K';
      } else {
        return num.toFixed(1);
      }
    }
    
    // Calculate resource flow rates (placeholder)
    function getFlowRate(resource: string): number {
      // This would actually calculate based on buildings
      // For now, just returning a random number for demonstration
      return (Math.random() * 2 - 1) * 10;
    }
  </script>
  
  <div class="resource-panel">
    <h2>Resources</h2>
    
    <div class="resource-list">
      {#each Object.entries($gameState.resources) as [resource, amount]}
        <div class="resource-item">
          <div class="resource-icon" style="background-color: {resourceColors[resource] || '#bdc3c7'}"></div>
          <div class="resource-details">
            <div class="resource-name">{resource}</div>
            <div class="resource-amount">{formatNumber(amount)}</div>
          </div>
          <div class="resource-flow {getFlowRate(resource) > 0 ? 'positive' : 'negative'}">
            {getFlowRate(resource) > 0 ? '+' : ''}{formatNumber(getFlowRate(resource))}/s
          </div>
        </div>
      {/each}
    </div>
    
    <div class="energy-display">
      <h3>Energy</h3>
      <div class="energy-meter">
        <div class="energy-fill" style="width: 75%"></div>
      </div>
      <div class="energy-stats">
        <div>Current: {formatNumber($gameState.energy_available || 0)} J</div>
        <div>Production: +{formatNumber(120)} J/s</div>
        <div>Consumption: -{formatNumber(80)} J/s</div>
      </div>
    </div>
  </div>
  
  <style>
    .resource-panel {
      background-color: #2c3e50;
      border-radius: 4px;
      padding: 16px;
      color: white;
    }
    
    h2, h3 {
      margin-top: 0;
      border-bottom: 1px solid #34495e;
      padding-bottom: 8px;
    }
    
    .resource-list {
      display: flex;
      flex-direction: column;
      gap: 8px;
      margin-bottom: 16px;
    }
    
    .resource-item {
      display: flex;
      align-items: center;
      background-color: #34495e;
      padding: 8px 12px;
      border-radius: 4px;
    }
    
    .resource-icon {
      width: 24px;
      height: 24px;
      border-radius: 4px;
      margin-right: 12px;
    }
    
    .resource-details {
      flex: 1;
    }
    
    .resource-name {
      font-size: 14px;
      text-transform: capitalize;
    }
    
    .resource-amount {
      font-weight: bold;
      font-size: 16px;
    }
    
    .resource-flow {
      font-size: 12px;
      padding: 2px 6px;
      border-radius: 2px;
      background-color: rgba(0, 0, 0, 0.2);
    }
    
    .resource-flow.positive {
      color: #2ecc71;
    }
    
    .resource-flow.negative {
      color: #e74c3c;
    }
    
    .energy-meter {
      height: 12px;
      background-color: #34495e;
      border-radius: 6px;
      margin: 8px 0;
      overflow: hidden;
    }
    
    .energy-fill {
      height: 100%;
      background: linear-gradient(90deg, #f39c12, #e67e22);
      border-radius: 6px;
    }
    
    .energy-stats {
      display: flex;
      justify-content: space-between;
      font-size: 12px;
      color: #bdc3c7;
    }
  </style>